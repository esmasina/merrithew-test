<div id="loading"></div>
<div id="map"></div>
@section scripts{
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCbY2q45aZxAJApBFC4vtels--H-1bGEQw"></script>
    <script>
        //global markers array
        var map;
        var markers = [];

        $(document).ready(function () {
            $('#map').css('height', $(window).height() - 50);

            $(window).resize(function () {
                $('#map').css('height', $(window).height() - 50);
            });

            //use default location: toronto
            var position = {
                lat: 43.652612,
                lng: -79.392484
            };

            //setup default map
            load_map(position);

            //centre of user's location
            initiate_geolocation();
        });

        function load_map(position) {
            mapOptions = {
                center: new google.maps.LatLng(position.lat, position.lng),
                zoom: 15,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                mapTypeControl: false
            };

            map = new google.maps.Map(document.getElementById('map'), mapOptions);

            //get locations in current bounds after panning/zooming
            google.maps.event.addListener(map, 'idle', function () {

                // Clear previous markers
                clear_markers();

                // Get the bounds of the viewable region (in miles)
                var bounds = map.getBounds();

                var center = bounds.getCenter();
                var ne = bounds.getNorthEast();

                // Radius of the earth in statute miles
                var r = 3963.0;

                // Convert lat or lng from decimal degrees to radians by dividing by 57.2958
                var lat1 = center.lat() / 57.2958;
                var lon1 = center.lng() / 57.2958;
                var lat2 = ne.lat() / 57.2958;
                var lon2 = ne.lng() / 57.2958;

                // Calculate the distance of the radius (center to Northeast corner of its bounds)
                var radius = r * Math.acos(Math.sin(lat1) * Math.sin(lat2) + Math.cos(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1));
                //miles to meters
                radius = radius * 1609.34;

                // Center of the map
                var position = map.getCenter();
                //position = position.lat() + "," + position.lng();
                var lat = position.lat();
                var lng = position.lng();
                get_locations(lat, lng, radius);
            });
            //get_locations();

        }

        // Get the end-user's geolocation (new HTML5 feature)
        function initiate_geolocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(handle_geolocation_query);
            } else { alert('Geolocation is not supported by this browser.'); }
        }

        function handle_geolocation_query(position) {
            //alert(position.coords.latitude + ' ' + position.coords.longitude);
            var center = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
            map.setCenter(center);

        }

        // AJAX request to our web api
        function get_locations(lat, lng, radius) {

            //$.get(location.protocol + '//' + location.host + '/api/locations', function (data, status) {
            //    console.log(data);
            //});
            //console.log('fetching' + this);
            $.ajax({
                datatype: "json",
                type: "Get",
                url: location.protocol + '//' + location.host + '/api/locations',
                data: {
                    lat: lat,
                    lng: lng,
                    radius: radius
                },
                
                beforeSend: function () {
                    $('#loading').stop().html('<img src="@Url.Content("~/img/loading.gif")" /><span>Fetching data...</span>').fadeIn(1000);
                },
                success: function (response) {
                    
                    //loading gif
                    $('#loading').fadeOut(1000);
                    try {
                        //var results = $.parseJSON(response);
                        var results = response;
                        //console.log(results);

                        $.each(results, function (index, data) {
                            
                            var geocode = {
                                lat: data.Lat,
                                lng: data.Long
                            };

                            var info = {
                                name: data.LocationName,
                                address: data.Address,
                                phone: data.Phone
                            }
                            //console.log(geocode, info);
                            add_marker(geocode, info);
                        });

                    } catch (e) { }
                }
            });
        }

        //add marker
        function add_marker(geocode, info) {

            var markerOptions = {
                position: new google.maps.LatLng(geocode.lat, geocode.lng),
                map: map
            }

            var marker = new google.maps.Marker(markerOptions);

            var contentString = "<div><h5>" + info.name + "</h5><p>" + info.address + " <br /> " + info.phone + "</p></div>";

            var infoWindow = new google.maps.InfoWindow({
                content: contentString,
                maxWidth: 250
            });

            markers.push(marker);

            marker.addListener('click', function () {
                infoWindow.open(map, marker);
            });

            google.maps.event.addListener(map, 'click', function () {
                infoWindow.close();
            });
        }

        function clear_markers() {
            if (typeof markers !== 'undefined' && markers.length > 0) {
                for (var i = 0; i < markers.length; i++) {
                    markers[i].setMap(null);
                }
                    markers = [];
            }

        }
    </script>
}